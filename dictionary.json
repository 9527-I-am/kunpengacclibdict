{
    "version": "1.0",
    "homePage" : "",
	"Intrinsic_help_url" : "https://developer.arm.com/architectures/instruction-sets/simd-isas/neon/intrinsics" ,
	"Category":[
       {
          "cnName": "压缩库",
		  "enName": "compress library",
		  "cnDesc": "使用鲲鹏硬件加速模块或鲲鹏指令对业界主流的开源压缩库（zlib、gzip、zstd、snappy等）进行性能优化，优化后压缩库通过鲲鹏社区发布",
		  "enDesc":"",
          "id":"1"
       },
       {
          "cnName": "系统库",
		  "enName": "system library",
		  "cnDesc": "基于鲲鹏微架构特点，使用鲲鹏指令对系统通用的基础库进行性能优化，以及传统平台的指令函数映射到鲲鹏平台的公共模块",
		  "enDesc": "",
          "id":"2"
       },
	   {
          "cnName": "加解密库",
		  "enName": "encryption and decryption library",
		  "cnDesc": "使用鲲鹏硬件加速模块及鲲鹏指令对openssl库进行性能优化，支持硬加速与指令加速的自动协同、应用逻辑无需修改即可使用加解密加速库",
		  "enDesc": "",
          "id":"3"
       },
	   {
          "cnName": "媒体库",
		  "enName": "media library",
		  "cnDesc": "基于鲲鹏加速指令提供高性能媒体原语库及视频编解码库",
		  "enDesc": "",
          "id":"4"
       }
    ],
    "library":[
       {
          "name": "glibc_patch",
		  "category id" : "2",
		  "cnDesc" : "对内存、字符串、锁等接口基于华为鲲鹏920处理器微架构特点进行了加速优化",
		  "enDesc" : "",
          "kunpeng_url":          "https://www.huaweicloud.com/kunpeng/software/glibc.html",
          "code_url": "http://ftp.jaist.ac.jp/pub/GNU/libc"
       },
       {
          "name": "hyperscan",
		  "category id" : "2",
		  "cnDesc" : "基于鲲鹏微架构优势，使用鲲鹏指令加速正则表达式的编译、扫描性能",
		  "enDesc" : "",
          "kunpeng_url": "https://www.huaweicloud.com/kunpeng/software/hyperscan.html",
          "code_url": "https://github.com/kunpengcompute/hyperscan"
       },
	   {
          "name": "gzip",
		  "category id" : "1",
		  "cnDesc" : "基于gzip-1.10，通过数据预取、循环展开、CRC指令替换等方法，来提升其在鲲鹏平台上的压缩和解压缩速率，尤其对文本类型文件的压缩及解压具有更明显的性能优势",
		  "enDesc" : "",
          "kunpeng_url": "https://www.huaweicloud.com/kunpeng/software/gzip.html",
          "code_url": "https://github.com/kunpengcompute/gzip"
       },
	   {
          "name": "zstd",
		  "category id" : "1",
		  "cnDesc" : "基于zstd-1.4.4，通过使用NEON指令、内联汇编、代码结构调整、内存预取、指令流水线排布优化等方法，实现zstd在鲲鹏平台上压缩和解压性能的提升",
		  "enDesc" : "",
          "kunpeng_url": "https://www.huaweicloud.com/kunpeng/software/zstd.html",
          "code_url": "https://github.com/kunpengcompute/zstd"
       },
	   {
          "name": "snappy",
		  "category id" : "1",
		  "cnDesc" : "基于snappy-1.1.7，使用内联汇编、高宽位指令、优化CPU流水线、内存预取等方法，实现snappy在鲲鹏平台上的压缩和解压速率提升",
		  "enDesc" : "",
          "kunpeng_url": "https://www.huaweicloud.com/kunpeng/software/snappy.html",
          "code_url": "https://github.com/kunpengcompute/snappy"
       },
	   {
          "name": "KAEzip",
		  "category id" : "1",
		  "cnDesc" : "KAEzip是鲲鹏加速引擎的压缩模块，使用鲲鹏硬加速模块实现deflate算法，结合无损用户态驱动框架，提供高性能gzip/zlib格式压缩接口",
		  "enDesc" : "",
          "kunpeng_url": "https://www.huaweicloud.com/kunpeng/software/kaezip.html",
          "code_url": "https://github.com/kunpengcompute/KAEzip"
       },
	   {
          "name": "KAECrypto",
		  "category id" : "3",
		  "cnDesc" : "使用鲲鹏硬加速模块实现RSA/SM3/SM4/DH/MD5/AES算法，结合无损用户态驱动框架，提供高性能对称加解密、非对称加解密算法能力，兼容openssl1.1.1a及其之后版本，支持同步&异步机制",
		  "enDesc" : "",
          "kunpeng_url": "https://www.huaweicloud.com/kunpeng/software/accelerator.html",
          "code_url": "https://github.com/kunpengcompute/KAE"
       },
	   {
          "name": "x265-patch",
		  "category id" : "4",
		  "cnDesc" : "针对ffmpeg视频转码场景，对x265的转码底层算子使用鲲鹏向量指令进行加速优化，提高转码性能",
		  "enDesc" : "",
          "kunpeng_url": "https://www.huaweicloud.com/kunpeng/software/x265-patch.html",
          "code_url": "http://x265.org/blog/"
       }
    ],
    "function": [
        { "name": "memcpy", 
          "library":"glibc_patch",
          "headerfile":"",
          "desc_cn":"内存复制函数",
          "desc_en":"",
          "benefit_cn":"使用了Neon指令进行加速优化，已合入gnu社区", 
          "benefit_en":""
        }, 
		{ "name": "memset", 
          "library":"glibc_patch",
          "headerfile":"",
          "desc_cn":"内存初始化",
          "desc_en":"",
          "benefit_cn":"使用了Neon指令进行加速优化，已合入gnu社区", 
          "benefit_en":""
        }, 
		{ "name": "memcmp", 
          "library":"glibc_patch",
          "headerfile":"",
          "desc_cn":"内存比较",
          "desc_en":"",
          "benefit_cn":"使用了Neon指令进行加速优化，已合入gnu社区", 
          "benefit_en":""
        }, 
		{ "name": "memrchr", 
          "library":"glibc_patch",
          "headerfile":"",
          "desc_cn":"内存初始化",
          "desc_en":"",
          "benefit_cn":"使用了Neon指令进行加速优化，已合入gnu社区", 
          "benefit_en":""
        }, 
		{ "name": "strcpy", 
          "library":"glibc_patch",
          "headerfile":"",
          "desc_cn":"字符串拷贝",
          "desc_en":"",
          "benefit_cn":"使用了Neon指令进行加速优化，已合入gnu社区", 
          "benefit_en":""
        }, 
		{ "name": "strlen", 
          "library":"glibc_patch",
          "headerfile":"",
          "desc_cn":"计算字符串长度",
          "desc_en":"",
          "benefit_cn":"使用了Neon指令进行加速优化，已合入gnu社区", 
          "benefit_en":""
        }, 
		{ "name": "strnlen", 
          "library":"glibc_patch",
          "headerfile":"",
          "desc_cn":"计算指定内存区的字符串长度",
          "desc_en":"",
          "benefit_cn":"使用了Neon指令进行加速优化，已合入gnu社区", 
          "benefit_en":""
        }, 
		{ "name": "deflate", 
          "library":"gzip",
          "headerfile":"",
          "desc_cn":"gzip工具的压缩接口",
          "desc_en":"",
          "benefit_cn":"使用了指令预取、循环展开实现性能优化", 
          "benefit_en":""
        }, 
		{ "name": "inflate", 
          "library":"gzip",
          "headerfile":"",
          "desc_cn":"gzip工具的解压接口",
          "desc_en":"",
          "benefit_cn":"使用了CRC加速指令实现性能优化", 
          "benefit_en":""
        }, 
		{ "name": "hs_scan",
          "library":"hyperscan", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/hyperscan/aarch64/src/hs_runtime.h" ,
          "desc_cn":"块模式的正则表达式扫描",
          "desc_en":"the block regular expression scan",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
        { "name": "hs_scan_vector",
          "library":"hyperscan", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/hyperscan/aarch64/src/hs_runtime.h" ,
          "desc_cn":"向量正则表达式扫描",
          "desc_en":"the vectored regular expression scan",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
        { "name": "hs_scan_stream",
          "library":"hyperscan", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/hyperscan/aarch64/src/hs_runtime.h" ,
          "desc_cn":"将待扫描数据写入打开的流中",
          "desc_en":"Write data to be scanned to the opened stream",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "hs_compile",
          "library":"hyperscan", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/hyperscan/aarch64/src/hs_compile.h" ,
          "desc_cn":"导入单个正则表达式",
          "desc_en":"",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "hs_compile_multi",
          "library":"hyperscan", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/hyperscan/aarch64/src/hs_compile.h" ,
          "desc_cn":"导入多个正则表达式",
          "desc_en":"",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "hs_compile_ext_multi",
          "library":"hyperscan", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/hyperscan/aarch64/src/hs_compile.h" ,
          "desc_cn":"导入多个含扩展参数的正则表达式",
          "desc_en":"",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "ZSTD_compress",
          "library":"zstd", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/zstd/aarch64-1.4.4/lib/zstd.h",
          "desc_cn":"zstd块压缩",
          "desc_en":"",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "ZSTD_decompress",
          "library":"zstd", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/zstd/aarch64-1.4.4/lib/zstd.h",
          "desc_cn":"zstd块解压",
          "desc_en":"",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "ZSTD_compressCCtx",
          "library":"zstd", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/zstd/aarch64-1.4.4/lib/zstd.h",
          "desc_cn":"参数可复用的zstd块压缩接口",
          "desc_en":"",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "ZSTD_decompressDCtx",
          "library":"zstd", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/zstd/aarch64-1.4.4/lib/zstd.h",
          "desc_cn":"参数可复用的zstd流解压接口",
          "desc_en":"",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "ZSTD_compress2",
          "library":"zstd", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/zstd/aarch64-1.4.4/lib/zstd.h",
          "desc_cn":"参数复用的zstd流解压扩展接口",
          "desc_en":"",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "ZSTD_compressStream",
          "library":"zstd", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/zstd/aarch64-1.4.4/lib/zstd.h",
          "desc_cn":"zstd流压缩",
          "desc_en":"",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "ZSTD_compressStream2",
          "library":"zstd", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/zstd/aarch64-1.4.4/lib/zstd.h",
          "desc_cn":"zstd流压缩扩展接口",
          "desc_en":"",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "ZSTD_decompressStream",
          "library":"zstd", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/zstd/aarch64-1.4.4/lib/zstd.h",
          "desc_cn":"zstd流解压",
          "desc_en":"",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "ZSTD_compress_usingDict",
          "library":"zstd", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/zstd/aarch64-1.4.4/lib/zstd.h",
          "desc_cn":"基于字典的zstd块压缩",
          "desc_en":"",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "ZSTD_decompress_usingDict",
          "library":"zstd", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/zstd/aarch64-1.4.4/lib/zstd.h",
          "desc_cn":"基于字典的zstd块解压",
          "desc_en":"",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "ZSTD_compress_usingCDict",
          "library":"zstd", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/zstd/aarch64-1.4.4/lib/zstd.h",
          "desc_cn":"基于摘要字典的zstd块压缩",
          "desc_en":"",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "ZSTD_decompress_usingDDict",
          "library":"zstd", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/zstd/aarch64-1.4.4/lib/zstd.h",
          "desc_cn":"基于摘要字典的zstd块解压",
          "desc_en":"",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "ZSTD_compressBegin",
          "library":"zstd", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/zstd/aarch64-1.4.4/lib/zstd.h",
          "desc_cn":"低内存消耗的流压缩初始化接口",
          "desc_en":"",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "ZSTD_compressContinue",
          "library":"zstd", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/zstd/aarch64-1.4.4/lib/zstd.h",
          "desc_cn":"低内存消耗的流压缩接口",
          "desc_en":"",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "ZSTD_compressEnd",
          "library":"zstd", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/zstd/aarch64-1.4.4/lib/zstd.h",
          "desc_cn":"低内存消耗的流压缩终止接口",
          "desc_en":"",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "ZSTD_decompressBegin",
          "library":"zstd", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/zstd/aarch64-1.4.4/lib/zstd.h",
          "desc_cn":"低内存消耗的流解压初始化接口",
          "desc_en":"",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "ZSTD_decompressContinue",
          "library":"zstd", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/zstd/aarch64-1.4.4/lib/zstd.h",
          "desc_cn":"低内存消耗的流解压接口",
          "desc_en":"",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "snappy_compress",
          "library":"snappy", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/snappy/aarch64-1.1.7/snappy-c.h",
          "desc_cn":"块模式压缩接口",
          "desc_en":"",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "snappy_uncompress",
          "library":"snappy", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/snappy/aarch64-1.1.7/snappy-c.h",
          "desc_cn":"块模式解压接口",
          "desc_en":"",
          "benefit_cn":"基于Neon指令实现性能优化",
          "benefit_en":""
        },
		{ "name": "deflate",
          "library":"KAEzip", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/KAEzip/master/include/kaezip.h",
          "desc_cn":"zlib流压缩接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器进行性能优化",
          "benefit_en":""
        },
		{ "name": "inflate",
          "library":"KAEzip", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/KAEzip/master/include/kaezip.h",
          "desc_cn":"zlib流解压接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器进行性能优化",
          "benefit_en":""
        },
		{ "name": "compress",
          "library":"KAEzip", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/KAEzip/master/include/kaezip.h",
          "desc_cn":"zlib块压缩接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器进行性能优化",
          "benefit_en":""
        },
		{ "name": "compress2",
          "library":"KAEzip", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/KAEzip/master/include/kaezip.h",
          "desc_cn":"zlib块压缩扩展接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器进行性能优化",
          "benefit_en":""
        },
		{ "name": "uncompress",
          "library":"KAEzip", 
		  "headerfile":"https://raw.githubusercontent.com/kunpengcompute/KAEzip/master/include/kaezip.h",
          "desc_cn":"zlib块解压接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器进行性能优化",
          "benefit_en":""
        },
		{ "name": "EVP_EncryptInit_ex",
          "library":"KAECrypto",
		  "headerfile":"https://raw.githubusercontent.com/openssl/openssl/dda4e259e51aeaf05a2417ef577accf778c9f6f6/include/openssl/evp.h",
          "desc_cn":"openssl加密初始化接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器实现RSA/AES/SM3/SM4/MD5/DH性能加速",
          "benefit_en":""
        },
		{ "name": "EVP_EncryptUpdate",
          "library":"KAECrypto",
		  "headerfile":"https://raw.githubusercontent.com/openssl/openssl/dda4e259e51aeaf05a2417ef577accf778c9f6f6/include/openssl/evp.h",
          "desc_cn":"openssl加密计算接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器实现RSA/AES/SM3/SM4/MD5/DH性能加速",
          "benefit_en":""
        },
		{ "name": "EVP_EncryptFinal",
          "library":"KAECrypto",
		  "headerfile":"https://raw.githubusercontent.com/openssl/openssl/dda4e259e51aeaf05a2417ef577accf778c9f6f6/include/openssl/evp.h",
          "desc_cn":"openssl加密完成接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器实现RSA/AES/SM3/SM4/MD5/DH性能加速",
          "benefit_en":""
        },
		{ "name": "EVP_DecryptInit_ex",
          "library":"KAECrypto",
		  "headerfile":"https://raw.githubusercontent.com/openssl/openssl/dda4e259e51aeaf05a2417ef577accf778c9f6f6/include/openssl/evp.h",
          "desc_cn":"openssl解密初始化接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器实现RSA/AES/SM3/SM4/MD5/DH性能加速",
          "benefit_en":""
        },
		{ "name": "EVP_DecryptUpdate",
          "library":"KAECrypto",
		  "headerfile":"https://raw.githubusercontent.com/openssl/openssl/dda4e259e51aeaf05a2417ef577accf778c9f6f6/include/openssl/evp.h",
          "desc_cn":"openssl解密计算接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器实现RSA/AES/SM3/SM4/MD5/DH性能加速",
          "benefit_en":""
        },
		{ "name": "EVP_DecryptFinal_ex",
          "library":"KAECrypto",
		  "headerfile":"https://raw.githubusercontent.com/openssl/openssl/dda4e259e51aeaf05a2417ef577accf778c9f6f6/include/openssl/evp.h",
          "desc_cn":"openssl解密完成接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器实现RSA/AES/SM3/SM4/MD5/DH性能加速",
          "benefit_en":""
        },
		{ "name": "EVP_DigestInit_ex",
          "library":"KAECrypto",
		  "headerfile":"https://raw.githubusercontent.com/openssl/openssl/dda4e259e51aeaf05a2417ef577accf778c9f6f6/include/openssl/evp.h",
          "desc_cn":"openssl摘要计算初始化接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器实现RSA/AES/SM3/SM4/MD5/DH性能加速",
          "benefit_en":""
        },
		{ "name": "EVP_DigestUpdate",
          "library":"KAECrypto",
		  "headerfile":"https://raw.githubusercontent.com/openssl/openssl/dda4e259e51aeaf05a2417ef577accf778c9f6f6/include/openssl/evp.h",
          "desc_cn":"openssl摘要计算接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器实现RSA/AES/SM3/SM4/MD5/DH性能加速",
          "benefit_en":""
        },
		{ "name": "EVP_DigestFinal_ex",
          "library":"KAECrypto",
		  "headerfile":"https://raw.githubusercontent.com/openssl/openssl/dda4e259e51aeaf05a2417ef577accf778c9f6f6/include/openssl/evp.h",
          "desc_cn":"openssl摘要完成接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器实现RSA/AES/SM3/SM4/MD5/DH性能加速",
          "benefit_en":""
        },
		{ "name": "DH_generate_key",
          "library":"KAECrypto",
		  "headerfile":"https://raw.githubusercontent.com/openssl/openssl/dda4e259e51aeaf05a2417ef577accf778c9f6f6/include/openssl/evp.h",
          "desc_cn":"openssl DH私钥生成接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器实现RSA/AES/SM3/SM4/MD5/DH性能加速",
          "benefit_en":""
        },
		{ "name": "DH_compute_key",
          "library":"KAECrypto",
		  "headerfile":"https://raw.githubusercontent.com/openssl/openssl/dda4e259e51aeaf05a2417ef577accf778c9f6f6/include/openssl/evp.h",
          "desc_cn":"openssl DH计算共享秘钥接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器实现RSA/AES/SM3/SM4/MD5/DH性能加速",
          "benefit_en":""
        },
		{ "name": "RSA_generate_key_ex",
          "library":"KAECrypto",
		  "headerfile":"https://raw.githubusercontent.com/openssl/openssl/dda4e259e51aeaf05a2417ef577accf778c9f6f6/include/openssl/evp.h",
          "desc_cn":"openssl RSA秘钥对生成接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器实现RSA/AES/SM3/SM4/MD5/DH性能加速",
          "benefit_en":""
        },
		{ "name": "EVP_PKEY_encrypt",
          "library":"KAECrypto",
		  "headerfile":"https://raw.githubusercontent.com/openssl/openssl/dda4e259e51aeaf05a2417ef577accf778c9f6f6/include/openssl/evp.h",
          "desc_cn":"openssl 公钥加密接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器实现RSA/AES/SM3/SM4/MD5/DH性能加速",
          "benefit_en":""
        },
		{ "name": "EVP_PKEY_decrypt",
          "library":"KAECrypto",
		  "headerfile":"https://raw.githubusercontent.com/openssl/openssl/dda4e259e51aeaf05a2417ef577accf778c9f6f6/include/openssl/evp.h",
          "desc_cn":"openssl 私钥解密接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器实现RSA/AES/SM3/SM4/MD5/DH性能加速",
          "benefit_en":""
        },
		{ "name": "EVP_PKEY_sign",
          "library":"KAECrypto",
		  "headerfile":"https://raw.githubusercontent.com/openssl/openssl/dda4e259e51aeaf05a2417ef577accf778c9f6f6/include/openssl/evp.h",
          "desc_cn":"openssl 私钥签名接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器实现RSA/AES/SM3/SM4/MD5/DH性能加速",
          "benefit_en":""
        },
		{ "name": "EVP_PKEY_verify",
          "library":"KAECrypto",
		  "headerfile":"https://raw.githubusercontent.com/openssl/openssl/dda4e259e51aeaf05a2417ef577accf778c9f6f6/include/openssl/evp.h",
          "desc_cn":"openssl 公钥验签接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器实现RSA/AES/SM3/SM4/MD5/DH性能加速",
          "benefit_en":""
        },
		{ "name": "RSA_private_decrypt",
          "library":"KAECrypto",
		  "headerfile":"https://raw.githubusercontent.com/openssl/openssl/dda4e259e51aeaf05a2417ef577accf778c9f6f6/include/openssl/evp.h",
          "desc_cn":"openssl RSA私钥解密接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器实现RSA/AES/SM3/SM4/MD5/DH性能加速",
          "benefit_en":""
        },
		{ "name": "RSA_private_encrypt",
          "library":"KAECrypto",
		  "headerfile":"https://raw.githubusercontent.com/openssl/openssl/dda4e259e51aeaf05a2417ef577accf778c9f6f6/include/openssl/evp.h",
          "desc_cn":"openssl RSA私钥加密接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器实现RSA/AES/SM3/SM4/MD5/DH性能加速",
          "benefit_en":""
        },
		{ "name": "RSA_public_decrypt",
          "library":"KAECrypto",
		  "headerfile":"https://raw.githubusercontent.com/openssl/openssl/dda4e259e51aeaf05a2417ef577accf778c9f6f6/include/openssl/evp.h",
          "desc_cn":"openssl RSA公钥解密接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器实现RSA/AES/SM3/SM4/MD5/DH性能加速",
          "benefit_en":""
        },
		{ "name": "RSA_public_encrypt",
          "library":"KAECrypto",
		  "headerfile":"https://raw.githubusercontent.com/openssl/openssl/dda4e259e51aeaf05a2417ef577accf778c9f6f6/include/openssl/evp.h",
          "desc_cn":"openssl RSA公钥加密接口",
          "desc_en":"",
          "benefit_cn":"基于鲲鹏加速器实现RSA/AES/SM3/SM4/MD5/DH性能加速",
          "benefit_en":""
        }
    ],
	"Intrinsic" : [
        {"name": "vadd_s8", 
         "full name": "int8x8_t vadd_s8(int8x8_t __a, int8x8_t __b)", 
         "Intel name": "_mm_add_epi8", 
          "Intel ASM":"paddb", 
          "Arm ASM":"add", 
          "function_en":"[vector] add [8]", 
          "function_cn":"[向量]加[8]"
        },
        {"name": "vadd_s32", 
         "full name": "int32x2_t vadd_s32(int32x2_t __a, int32x2_t __b)", 
         "Intel name": "_mm_add_epi32", 
          "Intel ASM":"paddd", 
          "Arm ASM":"add", 
          "function_en":"[vector] add [32]", 
          "function_cn":"[向量]加[32]" 
        }
    ]
}